# This references an OpenJDK container from the
# Docker Hub https://hub.docker.com/_/openjdk/
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: alpine:3.9
docker: true 

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # https://devcenter.wercker.com/development/steps/
  steps:
    - script:
        name: Install docker
        code: apk --no-cache add docker 
    - script:
        name: Install curl
        code: apk --no-cache add curl 
    - script:
        name: Explore the docker daemon
        code: |
          echo DOCKER_NETWORK_NAME=$DOCKER_NETWORK_NAME
          echo DOCKER_HOST = $DOCKER_HOST
          echo Running docker version 
          docker version 
          echo running docker ps 
          docker ps 
          echo running docker images 
          docker images 
          echo listing the docker networks 
          docker network list 
    # https://github.com/wercker/step-maven
  # - wercker/maven:
  #    goals: install
  #    cache_repo: true
  #    version: 3.5.2
    #- internal/docker-push:
    #    entrypoint: bin/get_ip
    #    cmd: ["java", "-jar", "/app/ateam-mp.jar"]
    #    working-dir: $WERCKER_ROOT
    #    tag: 1.0.0
    #    ports: 8080
    #    username: $DOCKER_USERNAME
    #    password: $DOCKER_PASSWORD
    #    repository: $DOCKER_REPO
    #    registry: https://phx.ocir.io/v2
    - script:
        name: List the directory structure
        code: |
          pwd 
          ls -ltra
    - script:
        name: Build the container
        code: |
          docker build -t ateam-mp:latest target
          docker tag ateam-mp:latest $DOCKER_REPO:1.0.0
    - script: 
        name: Push the container to OCIR 
        code: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push $DOCKER_REPO:1.0.0 
        

#deploy-to-kubernetes:
#  box: openjdk:8-jre-slim  
#  steps:
    # - bash-template
    # - script:
    #    name: "Prepare Kubernetes files"
    #    code: |
    #      mkdir $WERCKER_OUTPUT/kubernetes
    #      mv src/main/k8s/ateam-mp-svc.yaml $WERCKER_OUTPUT_DIR/kubernetes
#    - kubectl:
#        name: deploy to kubernetes 
#        server: $OKE_MASTER
#        token: $OKE_TOKEN
#        insecure-skip-tls-verify: true
#        command: apply -f src/main/k8s/ateam-mp-svc-populated.yaml
